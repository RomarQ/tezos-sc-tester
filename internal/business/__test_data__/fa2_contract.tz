{ storage (pair (pair %config (address %administrator) (bool %paused)) (pair (pair %assets (big_map %ledger (pair address nat) nat) (pair (big_map %operators (pair (address %owner) (pair (address %operator) (nat %token_id))) unit) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (pair (big_map %token_total_supply nat nat) (nat %token_id_sequence))))) (big_map %metadata string bytes))) ; parameter (or (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (or (pair %mint (address %address) (pair (nat %amount) (pair (nat %token_id) (map %metadata string bytes)))) (list %transfer (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))) (or (or (address %update_administrator) (map %update_metadata string bytes)) (or (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))) (bool %update_paused)))) ; code { UNPAIR ; IF_LEFT { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; IF { PUSH string "FA2__PAUSED" ; FAILWITH } {  } ; NIL (pair (pair address nat) nat) ; NIL operation ; DUP 3 ; CAR ; ITER { DUP 5 ; GET 3 ; GET 7 ; SWAP ; DUP ; DUG 2 ; CDR ; MEM ; IF {  } { PUSH string "FA2__TOKEN_UNDEFINED" ; FAILWITH } ; DUP ; CDR ; SWAP ; DUP ; DUG 2 ; CAR ; PAIR ; DUP 6 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; MEM ; IF { DIG 3 ; DUP 6 ; GET 3 ; CAR ; DIG 2 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; DIG 2 ; PAIR ; CONS ; SWAP } { DROP ; DIG 2 ; PUSH nat 0 ; DIG 2 ; PAIR ; CONS ; SWAP } ; DUP 3 ; CDR ; PUSH mutez 0 ; DUP 4 ; TRANSFER_TOKENS ; CONS } ; SWAP ; DROP ; SWAP ; DROP } { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__NOT_ADMIN" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; DUP ; GET 3 ; PUSH nat 1 ; DIG 4 ; GET 3 ; GET 8 ; ADD ; UPDATE 8 ; UPDATE 3 ; DUP ; DUG 2 ; GET 3 ; GET 8 ; SWAP ; DUP ; DUG 2 ; GET 5 ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__INVALID_TOKEN_ID" ; FAILWITH } ; DUP ; GET 5 ; SWAP ; DUP ; DUG 2 ; CAR ; PAIR ; DUP 3 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; MEM ; IF { DUP 3 ; DUP ; GET 3 ; DUP ; CAR ; DUP 5 ; GET 3 ; DIG 6 ; GET 3 ; CAR ; DUP 6 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; ADD ; SOME ; DUP 5 ; UPDATE ; UPDATE 1 ; UPDATE 3 ; DUG 2 } { DIG 2 ; DUP ; GET 3 ; DUP ; CAR ; DUP 5 ; GET 3 ; SOME ; DUP 5 ; UPDATE ; UPDATE 1 ; UPDATE 3 ; DUG 2 } ; DUP 3 ; GET 3 ; GET 5 ; DUP 3 ; GET 5 ; MEM ; IF { SWAP ; DUP ; DUG 2 ; GET 6 ; ITER { DIG 3 ; DUP ; GET 3 ; DUP ; GET 5 ; DUP ; DUP 7 ; GET 5 ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; DUP ; CDR ; DUP 7 ; CDR ; SOME ; DIG 7 ; CAR ; UPDATE ; UPDATE 2 ; SOME ; SWAP ; UPDATE ; UPDATE 5 ; UPDATE 3 ; DUG 2 } ; DROP } { DROP ; SWAP ; DUP ; GET 3 ; DUP ; GET 5 ; DIG 3 ; DUP ; GET 6 ; SWAP ; DUP ; DUG 5 ; GET 5 ; PAIR ; SOME ; DUP 5 ; GET 5 ; UPDATE ; UPDATE 5 ; UPDATE 3 ; SWAP } ; SWAP ; DUP ; DUG 2 ; GET 3 ; GET 7 ; SWAP ; DUP ; DUG 2 ; GET 5 ; MEM ; IF { SWAP ; DUP ; DUG 2 ; GET 3 ; GET 7 ; SWAP ; DUP ; DUG 2 ; GET 5 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; DIG 2 ; DUP ; GET 3 ; DUP ; GET 7 ; DUP 5 ; GET 3 ; DIG 4 ; ADD ; SOME ; DIG 4 ; GET 5 ; UPDATE ; UPDATE 7 ; UPDATE 3 } { SWAP ; DUP ; GET 3 ; DUP ; GET 7 ; DUP 4 ; GET 3 ; SOME ; DIG 4 ; GET 5 ; UPDATE ; UPDATE 7 ; UPDATE 3 } } { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; IF { PUSH string "FA2__PAUSED" ; FAILWITH } {  } ; DUP ; ITER { DUP ; CDR ; ITER { DUP 4 ; GET 3 ; GET 7 ; SWAP ; DUP ; DUG 2 ; GET 3 ; MEM ; IF {  } { PUSH string "FA2__TOKEN_UNDEFINED" ; FAILWITH } ; SWAP ; DUP ; DUG 2 ; CAR ; SENDER ; COMPARE ; EQ ; IF { PUSH bool True } { DUP 4 ; GET 3 ; GET 3 ; SWAP ; DUP ; DUG 2 ; GET 3 ; SENDER ; DUP 5 ; CAR ; PAIR 3 ; MEM } ; IF {  } { PUSH string "FA2__NOT_OPERATOR" ; FAILWITH } ; DUP ; GET 3 ; DUP 3 ; CAR ; PAIR ; DUP 5 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; MEM ; IF {  } { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ; DUP 5 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; DIG 5 ; DUP ; GET 3 ; DUP ; CAR ; DUP 6 ; GET 4 ; DIG 4 ; SUB ; ISNAT ; IF_NONE { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {  } ; SOME ; DIG 4 ; UPDATE ; UPDATE 1 ; UPDATE 3 ; DUG 3 ; DUP ; GET 3 ; SWAP ; DUP ; DUG 2 ; CAR ; PAIR ; DUP 5 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; MEM ; IF { DUP 5 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; DIG 5 ; DUP ; GET 3 ; DUP ; CAR ; DIG 5 ; GET 4 ; DIG 4 ; ADD ; SOME ; DIG 4 ; UPDATE ; UPDATE 1 ; UPDATE 3 ; DUG 2 } { DIG 4 ; DUP ; GET 3 ; DUP ; CAR ; DIG 4 ; GET 4 ; SOME ; DIG 4 ; UPDATE ; UPDATE 1 ; UPDATE 3 ; DUG 2 } } ; DROP } ; DROP } ; NIL operation } } { IF_LEFT { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__NOT_ADMIN" ; FAILWITH } ; SWAP ; DUP ; CAR ; DIG 2 ; UPDATE 1 ; UPDATE 1 } { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__NOT_ADMIN" ; FAILWITH } ; DUP ; ITER { DIG 2 ; DUP ; GET 4 ; DUP 3 ; CDR ; SOME ; DIG 3 ; CAR ; UPDATE ; UPDATE 4 ; SWAP } ; DROP } } { IF_LEFT { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; IF { PUSH string "FA2__PAUSED" ; FAILWITH } {  } ; DUP ; ITER { IF_LEFT { DUP ; CAR ; SENDER ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__NOT_OWNER" ; FAILWITH } ; DIG 2 ; DUP ; GET 3 ; DUP ; GET 3 ; PUSH (option unit) (Some Unit) ; DIG 4 ; UPDATE ; UPDATE 3 ; UPDATE 3 ; SWAP } { DUP ; CAR ; SENDER ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__NOT_OWNER" ; FAILWITH } ; DIG 2 ; DUP ; GET 3 ; DUP ; GET 3 ; NONE unit ; DIG 4 ; UPDATE ; UPDATE 3 ; UPDATE 3 ; SWAP } } ; DROP } { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; SENDER ; COMPARE ; EQ ; IF {  } { PUSH string "FA2__NOT_ADMIN" ; FAILWITH } ; SWAP ; DUP ; CAR ; DIG 2 ; UPDATE 2 ; UPDATE 1 } } ; NIL operation } ; NIL operation ; SWAP ; ITER { CONS } ; PAIR } ; view "balance_of" (list (pair (address %owner) (nat %token_id))) unit { UNPAIR ; DUP ; NIL (pair (pair address nat) nat) ; SWAP ; ITER { DUP 4 ; GET 3 ; GET 7 ; SWAP ; DUP ; DUG 2 ; CDR ; MEM ; IF {  } { PUSH string "FA2__TOKEN_UNDEFINED" ; FAILWITH } ; DUP ; CDR ; SWAP ; DUP ; DUG 2 ; CAR ; PAIR ; DUP 5 ; GET 3 ; CAR ; SWAP ; DUP ; DUG 2 ; MEM ; IF { DIG 2 ; DUP 5 ; GET 3 ; CAR ; DIG 2 ; GET ; IF_NONE { PUSH int 1 ; FAILWITH } {  } ; DIG 2 ; PAIR ; CONS } { DROP ; SWAP ; PUSH nat 0 ; DIG 2 ; PAIR ; CONS } } ; DROP 3 ; UNIT } }